# This file is part of the Data Cleaning Library (openclean).
#
# Copyright (C) 2018-2020 New York University.
#
# openclean is released under the Revised BSD License. See file LICENSE for
# full license details.

"""Interface definitions for functions that operate on lists of values."""

from abc import abstractmethod, ABCMeta


class DictionaryFunction(metaclass=ABCMeta):
    """Interface for dictionary generating functions. These functins convert
    a list of values into a dictionary. Key values in the created dictionaries
    are either values from the given input list or a new generated list of
    values. Values that are associated with key values are implementation-
    specific results of applying an evaluation function on the key value.

    A typical example of a dictionary function is distinct. This function takes
    a list of values and outputs a dictionary where with each distinct value
    the frequency of that value in the list is associated.
    """
    @abstractmethod
    def map(self, values):
        """The map function takes a list of values and outputs a dictionary.
        The keys in the returned dictionary are either values from the given
        input list or generated by the class implementation. The values that
        are associated with the keys are also implementation-specific.

        Parameters
        ----------
        values: list
            List of scalar values or tuples of scalar values.

        Returns
        -------
        dict
        """
        raise NotImplementedError()


class ListFunction(metaclass=ABCMeta):
    """Interface for functions that transform a given list of values."""
    @abstractmethod
    def apply(self, values):
        """Apply a function to each value in a given list. Returns a list of
        values that are the result of evaluating an assicuated value function
        for the respective input values.

        Should call the prepare method of an associated value function before
        executing the eval method on each individual value in the given list.

        Parameters
        ----------
        values: list
            List of scalar values or tuples of scalar values.

        Returns
        -------
        list
        """
        raise NotImplementedError()
